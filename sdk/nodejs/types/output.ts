// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface ExternalFunctionArg {
    /**
     * Argument name
     */
    name: string;
    /**
     * Argument type, e.g. VARCHAR
     */
    type: string;
}

export interface ExternalFunctionHeader {
    /**
     * Header name
     */
    name: string;
    /**
     * Header value
     */
    value: string;
}

export interface ExternalTableColumn {
    /**
     * String that specifies the expression for the column. When queried, the column returns results derived from this expression.
     */
    as: string;
    /**
     * Column name
     */
    name: string;
    /**
     * Column type, e.g. VARIANT
     */
    type: string;
}

export interface FunctionGrantArgument {
    /**
     * The argument name
     */
    name: string;
    /**
     * The argument type
     */
    type: string;
}

export interface GetMaterializedViewsMaterializedView {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetSchemasSchema {
    comment: string;
    database: string;
    name: string;
}

export interface GetTablesTable {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetViewsView {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface ProcedureGrantArgument {
    /**
     * The argument name
     */
    name: string;
    /**
     * The argument type
     */
    type: string;
}

export interface TableColumn {
    /**
     * Column name
     */
    name: string;
    /**
     * Whether this column can contain null values. **Note**: Depending on your Snowflake version, the default value will not suffice if this column is used in a primary key constraint.
     */
    nullable?: boolean;
    /**
     * Column type, e.g. VARIANT
     */
    type: string;
}

export interface TablePrimaryKey {
    /**
     * Columns to use in primary key
     */
    keys: string[];
    /**
     * Name of constraint
     */
    name?: string;
}
