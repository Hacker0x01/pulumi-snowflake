// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-snowflake/sdk/go/snowflake"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := snowflake.GetPipes(ctx, &GetPipesArgs{
// 			Database: "MYDB",
// 			Schema:   "MYSCHEMA",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetPipes(ctx *pulumi.Context, args *GetPipesArgs, opts ...pulumi.InvokeOption) (*GetPipesResult, error) {
	var rv GetPipesResult
	err := ctx.Invoke("snowflake:index/getPipes:getPipes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipes.
type GetPipesArgs struct {
	// The database from which to return the schemas from.
	Database string `pulumi:"database"`
	// The schema from which to return the pipes from.
	Schema string `pulumi:"schema"`
}

// A collection of values returned by getPipes.
type GetPipesResult struct {
	// The database from which to return the schemas from.
	Database string `pulumi:"database"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The pipes in the schema
	Pipes []GetPipesPipe `pulumi:"pipes"`
	// The schema from which to return the pipes from.
	Schema string `pulumi:"schema"`
}
